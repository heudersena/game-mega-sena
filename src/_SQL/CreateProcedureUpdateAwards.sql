-- SELECT g.created_at	FROM	games AS g	ORDER BY g.created_at DESC LIMIT 1


-- SELECT * FROM bets AS B WHERE B.number_game_result = 6 AND B.hits_round >= 4 AND B.awarded = TRUE
 SELECT player_block FROM awards AS A WHERE A.gamer_ref = 44

SELECT COUNT(B.hits_round) AS QUANTIDADE_SEIS FROM bets AS B WHERE B.number_game_result =  AND B.hits_round = 4 AND B.awarded = TRUE


DROP PROCEDURE IF EXISTS PROCEDURE_BUSCAS_QUANTIDADE_GANHADORES;

DELIMITER //
CREATE PROCEDURE PROCEDURE_BUSCAS_QUANTIDADE_GANHADORES(IN param_id INT)
BEGIN
  DECLARE QUANTIDADE_QUATRO INT;
  DECLARE QUANTIDADE_CINCO INT;
  DECLARE QUANTIDADE_SEIS INT;
  
  DECLARE _PLAYER_BLOCK DECIMAL(10,2);
  DECLARE RESULTADO_BLOCK DECIMAL(10,2);
  
  DECLARE _PLAYER_FIVE DECIMAL(10,2);
  DECLARE RESULTADO_FIVE DECIMAL(10,2);  
  
  DECLARE _PLAYER_SIX DECIMAL(10,2);
  DECLARE RESULTADO_SIX DECIMAL(10,2); 
  
  DECLARE SET_UPDATE_AWARDS_BLOCK DECIMAL(10,2);
  DECLARE SET_UPDATE_AWARDS_BLOCK_CALC DECIMAL(10,2);
  
  DECLARE SET_UPDATE_AWARDS_FIVE DECIMAL(10,2);
  DECLARE SET_UPDATE_AWARDS_FIVE_CALC DECIMAL(10,2);
  
  DECLARE SET_UPDATE_AWARDS_SIX DECIMAL(10,2);
  DECLARE SET_UPDATE_AWARDS_SIX_CALC DECIMAL(10,2);
  

 SELECT COUNT(B.hits_round) AS QUANTIDADE_QUATRO INTO QUANTIDADE_QUATRO FROM bets AS B WHERE B.number_game_result = param_id  AND B.hits_round = 4 AND B.awarded = TRUE;
 SELECT COUNT(B.hits_round) AS QUANTIDADE_CINCO INTO QUANTIDADE_CINCO  FROM bets AS B WHERE B.number_game_result = param_id  AND B.hits_round = 5 AND B.awarded = TRUE;
 SELECT COUNT(B.hits_round) AS QUANTIDADE_SEIS INTO QUANTIDADE_SEIS   FROM bets AS B WHERE B.number_game_result = param_id  AND B.hits_round = 6 AND B.awarded = TRUE;
 
 -- pegar o valor de quando o acerto é 4
 SELECT `block` INTO _PLAYER_BLOCK FROM awards AS A WHERE A.gamer_ref = param_id; 
 SET RESULTADO_BLOCK = TRUNCATE(_PLAYER_BLOCK / QUANTIDADE_QUATRO,2);
 
  -- pegar o valor de quando o acerto é 5
 SELECT corner INTO _PLAYER_FIVE FROM awards AS A WHERE A.gamer_ref = param_id; 
 SET RESULTADO_FIVE = TRUNCATE(_PLAYER_FIVE / QUANTIDADE_CINCO,2);
 
  -- pegar o valor de quando o acerto é 6
 SELECT seine INTO _PLAYER_SIX FROM awards AS A WHERE A.gamer_ref = param_id; 
 SET RESULTADO_SIX = TRUNCATE(_PLAYER_SIX / QUANTIDADE_SEIS,2);
 
 -- atualizar valores
 IF QUANTIDADE_QUATRO <> 0 THEN
     UPDATE awards SET player_block = RESULTADO_BLOCK WHERE gamer_ref = param_id;
	       
     SELECT subtract_premiums INTO SET_UPDATE_AWARDS_BLOCK FROM awards  WHERE gamer_ref = param_id;     
     SET SET_UPDATE_AWARDS_BLOCK_CALC =  TRUNCATE(SET_UPDATE_AWARDS_BLOCK - RESULTADO_BLOCK,2);
     UPDATE awards SET subtract_premiums = SET_UPDATE_AWARDS_BLOCK_CALC WHERE gamer_ref = param_id;
     
 END IF;
 
 IF QUANTIDADE_CINCO <> 0 THEN
     UPDATE awards SET player_corner = RESULTADO_FIVE WHERE gamer_ref = param_id;
     
     SELECT subtract_premiums INTO SET_UPDATE_AWARDS_FIVE FROM awards  WHERE gamer_ref = param_id;     
     SET SET_UPDATE_AWARDS_FIVE_CALC =  TRUNCATE(SET_UPDATE_AWARDS_BLOCK - RESULTADO_FIVE,2);
     UPDATE awards SET subtract_premiums = SET_UPDATE_AWARDS_BLOCK_CALC WHERE gamer_ref = param_id;
 END IF;
 
 IF QUANTIDADE_SEIS <> 0 THEN
     UPDATE awards SET player_seine = RESULTADO_SIX WHERE gamer_ref = param_id;
     
     SELECT subtract_premiums INTO SET_UPDATE_AWARDS_SIX FROM awards  WHERE gamer_ref = param_id;     
     SET SET_UPDATE_AWARDS_SIX_CALC =  TRUNCATE(SET_UPDATE_AWARDS_BLOCK - RESULTADO_SIX,2);
     UPDATE awards SET subtract_premiums = SET_UPDATE_AWARDS_BLOCK_CALC WHERE gamer_ref = param_id;
 END IF;
 

 SELECT QUANTIDADE_QUATRO,RESULTADO_BLOCK,_PLAYER_BLOCK,QUANTIDADE_CINCO,RESULTADO_FIVE,_PLAYER_FIVE,QUANTIDADE_SEIS,RESULTADO_SIX,_PLAYER_SIX;
END //

DELIMITER ;


CALL PROCEDURE_BUSCAS_QUANTIDADE_GANHADORES(19);